问题
---------
1. 程序 Problem.java 无法编译。你需要做什么
   让它编译？为什么？
   [.../tutorial/java/javaOO/QandE-1dot1/Problem.java]
解答：在 <code> timer </code> 的声明前添加 "final"
	变量。正如 "关于嵌套类的其他事实" 中所述，
	"A nested class declared within a method...has access to any
	final, local variables in scope."

2. 使用 Box 类的 1.3 API 文档（在
   javax.swing 包）帮助你回答以下问题。

   a. Box 定义了什么静态嵌套类？
答案：Box.Filler

   b. Box 定义了什么内部类？
答案：Box.AccessibleBox   

   c. Box 的内部类的超类是什么？
ANSWER: [java.awt.]Container.AccessibleAWTContainer
  
   d. 你可以在任何类中使用 Box 的嵌套类中的哪一个？
答案：Box.Filler

   e. 你如何创建 Box 的填充类的实例？
回答： 
	new Box.Filler(minDimension, prefDimension, maxDimension)

3. What kind of nested class is most appropriate for each of the following
   situations?[PENDING: can we make that clearer?Is there a term
   for this kind of one-to-one matching question?]

   a. The only users of this nested class will be instances of
      the enclosing class or instances of the enclosing class's
      subclasses.
ANSWER: B

   b. Anyone can use this nested class.
ANSWER: C

   c. Only instances of the declaring class need to use this nested
      class, and a particular instance might use it several times.
ANSWER: F

   d. This tiny nested class is used just once, to create an
      object that implements an interface.
ANSWER: A

   e. This nested class has information about its enclosing class
      (not about instances of the enclosing class) and is used
      only by its enclosing class and perhaps their subclasses.
ANSWER: D

   f. Like e, but not intended to be used by subclasses.
ANSWER: E

   A. anonymous inner class
   B. protected inner class
   C. public static nested class
   D. protected static nested class
   E. private static nested class
   F. private inner class


练习
---------
1. 首先，获取源文件 InnerClassDemo.java。  
   [.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo.java]

   a. 编译并运行 InnerClassDemo。如果你有问题，请参阅
      编译和运行 Swing 程序
      [http://docs.oracle.com/javase/javatutorials/tutorialJWS/uiswing/start/swingStart.html].
   
ANSWER: N/A. [这一步只是为了确保它们可以编译
	and run Swing programs, before they start trying to change
	the programs.]

   b. 制作 InnerClassDemo 的副本。Add to it an inner class named
      MyActionListener that implements the ActionListener interface
   [http://java.sun.com/products/jdk/1.3/docs/api/java/awt/event/ActionListener.html].
      The ActionListener interface defines a single method.  Put the
      following code into your implementation of the method:
   
         quit();

      Delete the "//" in front of the following line of code:

	 //button.addActionListener(new MyActionListener());

      Now compile and run the program.  What is the difference in
      behavior between this version and the previous version of
      InnerClassDemo?

ANSWER: See InnerClassDemo2.java
   [.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo2.java]
	In this version, the button actually *does* something
	(makes the program exit).

   c. Make a copy of the program you created for b.  Change your
      ActionListener implementation to be an anonymous inner class.
      Hint: The program already has another anonymous inner class
      (a WindowAdapter), which you can look at for syntax help.

ANSWER: See InnerClassDemo3.java
   [.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo3.java]

2. Get the file Class1.java
   [.../tutorial/java/javaOO/QandE-1dot1/Class1.java].
  
   a. 编译并运行 Class1。输出是什么？
回答： 
      InnerClass1: getString invoked.
      InnerClass1: getAnotherString invoked.

   b. Create a file called Class2.java that defines subclasses
      of both Class1 and its inner class, InnerClass1.  (Call the
      subclasses Class2 and InnerClass2, respectively.)  InnerClass2
      should override the getAnotherString method to return 
      "InnerClass2 version of getAnotherString invoked".  

      Class2 should define one constructor and one method:

      - A no-argument constructor that initializes the inherited
	<code>ic</code>
        instance variable to be an instance of InnerClass2.
      - A <code>main</code> method that creates an instance 
         of Class2 and invokes displayStrings on that instance.

      What is the output when you run Class2?
回答： 
      InnerClass1: getString invoked.
      InnerClass2 version of getAnother String invoked.
See Class2.java
   [.../tutorial/java/javaOO/QandE-1dot1/Class2.java]

